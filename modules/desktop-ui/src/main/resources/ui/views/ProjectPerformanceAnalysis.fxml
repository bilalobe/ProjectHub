<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.geometry.Insets?>
<?import javafx.scene.chart.*?>
<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>
<?import java.net.URL?>
<BorderPane xmlns:fx="http://javafx.com/fxml/1"
            xmlns="http://javafx.com/javafx/23.0.1"
            fx:controller="com.projecthub.ui.controllers.ProjectAnalyticsController"
            styleClass="project-analytics-container">

    <top>
        <VBox styleClass="header-section">
            <HBox styleClass="dashboard-header" alignment="CENTER_LEFT" spacing="15">
                <Button fx:id="backToDashboardButton"
                        styleClass="button-flat"
                        text="%analytics.backButton"
                        accessibleText="%accessibility.backToDashboard">
                    <tooltip>
                        <Tooltip text="%tooltip.backToDashboard"/>
                    </tooltip>
                </Button>

                <Label text="%analytics.title"
                       styleClass="heading-large, text-strong"
                       accessibleText="%accessibility.analyticsTitle"/>

                <Region HBox.hgrow="ALWAYS"/>
                <ComboBox fx:id="projectSelector"
                          styleClass="input, project-select"
                          promptText="%analytics.selectProject"
                          accessibleText="%accessibility.projectSelector"/>
            </HBox>
            <Separator/>
        </VBox>
    </top>

    <center>
        <ScrollPane fitToWidth="true"
                    fitToHeight="true"
                    styleClass="analytics-scroll">
            <VBox spacing="20" styleClass="analytics-content">
                <padding>
                    <Insets bottom="20" left="20" right="20" top="20"/>
                </padding>

                <!-- Overall Progress Chart -->
                <VBox styleClass="content-item">
                    <Label text="%analytics.overallProgress"
                           styleClass="section-header, heading-medium, text-secondary"
                           accessibleText="%accessibility.overallProgress"/>
                    <PieChart fx:id="overallProgressChart" styleClass="pie-chart"/>
                </VBox>

                <!-- Tasks Overview Chart -->
                <VBox styleClass="content-item">
                    <HBox alignment="CENTER_LEFT" styleClass="component-header">
                        <Label text="%analytics.taskOverview"
                               styleClass="section-header, heading-medium, text-secondary"
                               accessibleText="%accessibility.taskOverview"/>
                    </HBox>

                    <BarChart fx:id="tasksOverviewChart" styleClass="bar-chart">
                        <xAxis>  <!-- If a specific axis name for bar chart is needed -->
                            <CategoryAxis/>  <!-- category axis component from layouts -->
                        </xAxis>
                        <yAxis>
                            <NumberAxis/>  <!-- Numeric Axis  from component layouts -->
                        </yAxis>

                    </BarChart>

                </VBox>

                <!-- Task Completion Rate -->

                <VBox styleClass="content-item">
                    <HBox alignment="CENTER_LEFT" styleClass="component-header">
                        <Label text="%analytics.taskCompletionRate"
                               styleClass="section-header heading-medium text-secondary"
                               accessibleText="%accessibility.taskCompletion"/>
                    </HBox>

                    <LineChart fx:id="taskCompletionChart"
                               styleClass="line-chart">  <!-- chart based layout , if custom charts/ components  are not used by libraries / design system (but a custom view components are used to display those )-->
                        <xAxis>
                            <NumberAxis/>   <!-- axes to be provided with component ( as needed for some custom component/ charts to get rendered ) using API or properties-->
                        </xAxis>
                        <yAxis>
                            <NumberAxis/>   <!-- properties from the charts components if a custom charting or equivalent data plotting/rendering/view using  API/framework/ component properties ( for setting data to view layout and properties)-->
                        </yAxis>
                    </LineChart>

                </VBox>


                <!-- Resource Utilization Section  -->
                <VBox styleClass="content-item resources-utilization"
                      spacing="10">  <!-- local layout container for styling  , with layout properties (from default, or as set via tag or css from component  /layout behaviour) -->
                    <HBox styleClass="component-header"
                          alignment="CENTER_LEFT"> <!-- layouts that provides all sub component style / alignment with view layouts -->
                        <Label text="%analytics.resourceUtilization"
                               styleClass="section-header   heading-medium text-secondary"
                               accessibleText="%accessibility.resourceUtilization"/> <!-- Layout components header-->
                    </HBox>
                    <TableView fx:id="resourceUtilizationTable" VBox.vgrow="ALWAYS"
                               styleClass="resource-table data-table"> <!-- Table layout using tags / property based visual/UI style layout from style properties/css and or from component design -->

                        <columns>
                            <TableColumn text="%resource.name"
                                         styleClass="text-small"/> <!-- localized labels via layout component with its styled using semantic properties-->
                            <TableColumn text="%resource.utilization"
                                         styleClass="text-small"/>  <!-- column properties / headers properties that will be set with translations or text layout using default components or if specific override/variation is required by UI using component styling via css-->
                            <TableColumn text="%resource.overUtilization" styleClass="text-small"/>
                        </columns>

                        <placeholder>
                            <Label styleClass="text-muted"
                                   text="%resource.empty"/> <!-- Place holder if no values / data is present from java or its data bindings / model etc using components that shows default text from locale properties ( or default system if API/ data load was an issue ) -->
                        </placeholder>
                    </TableView>
                </VBox>

            </VBox>
        </ScrollPane>
    </center>
    <bottom>
        <HBox spacing="10"
              styleClass="status-bar  footer">  <!-- Layout to show current status and is consistent across app via styles -->
            <Label fx:id="statusLabel" styleClass="status-message text-muted"
                   text="%status.ready"/> <!-- styled text labels via tag names with specific text sizes  /properties for this layout with data that comes via java controller and from external  /local properties via UI API/design / framework system  -->
            <Region
                HBox.hgrow="ALWAYS"/>  <!-- a space using tags (with component property ) if extra layout space is needed  (for right and left component alignment in horizontal layout like  status view or other sections in footer -->

            <Label fx:id="lastUpdatedLabel"
                   styleClass="text-small text-muted"/>   <!-- a localized text  that must comes with localized value or API if any local /view state or UI changes need an updated values -->

        </HBox>
    </bottom>
    <stylesheets>
        <URL value="@../css/styles.css"/>
        <URL value="@../css/analytics.css"/>
    </stylesheets>
</BorderPane>
