plugins {
    id 'application'
    alias(libs.plugins.gluonfxPlugin)
    alias(libs.plugins.springBoot)
    alias(libs.plugins.springDependencyManagement)
    alias(libs.plugins.sonarqube)
}

group = 'com.projecthub'
version = '1.0.0'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://nexus.gluonhq.com/nexus/content/repositories/releases'
    }
}

dependencies {
    implementation project(':core')
    implementation libs.bundles.uiBase
    implementation libs.bundles.gluon
    implementation libs.bundles.springBase
    implementation libs.bundles.springWeb

    implementation libs.bundles.jjwt
    implementation libs.modelMapper
    implementation libs.openCsv
    implementation libs.owaspEncoder
    implementation libs.mapstruct

    annotationProcessor libs.mapstructProcessor
    annotationProcessor libs.lombok

    runtimeOnly libs.h2Database

    testImplementation libs.bundles.testing
}

sonarqube {
    properties {
        property "sonar.projectKey", "bilalobe_ProjectHub"
        property "sonar.organization", "bilalobe"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

application {
    mainClass = 'com.projecthub.MainApp'
}

bootRun {
    mainClass = 'com.projecthub.MainApp'
    jvmArgs = [
        '--module-path', configurations.runtimeClasspath.asPath,
        '--add-modules', 'javafx.controls,javafx.fxml,javafx.web,javafx.media,javafx.graphics'
    ]
}

jar {
    manifest {
        attributes 'Main-Class': 'com.projecthub.ui.MainApp'
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}