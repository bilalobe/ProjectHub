name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        lfs: true  # Fetch Git LFS files

    - name: Set up JDK 23
      uses: actions/setup-java@v2
      with:
        java-version: '23'
        distribution: 'temurin'

    - name: Grant execute permission for Gradle
      run: chmod +x ./gradlew

    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Gradle
      run: ./gradlew build

    - name: List build/libs directory contents
      run: ls -la app/build/libs/

    - name: Run Tests with H2
      run: ./gradlew test -Dspring.profiles.active=dev

    - name: Cache build output
      uses: actions/cache@v4
      with:
        path: build
        key: ${{ runner.os }}-build-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-build-

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PAT }}

    - name: Build and push Docker image
      run: |
        IMAGE_NAME=my-docker-repo/projecthub:latest
        docker build -t $IMAGE_NAME .
        docker push $IMAGE_NAME

    - name: Run Application
      run: docker-compose -f compose-dev.yaml up -d app