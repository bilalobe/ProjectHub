name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        lfs: true
        fetch-depth: 0

    - name: Set up JDK 23
      uses: actions/setup-java@v4
      with:
        java-version: '23'
        distribution: 'temurin'
        cache: 'gradle'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PAT }}
        # Add registry if not using Docker Hub
        # registry: your-registry-url
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/projecthub:latest
        cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/projecthub:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/projecthub:buildcache,mode=max
        platforms: linux/amd64

    - name: Deploy with Docker Compose
      run: |
        docker-compose -f compose-dev.yaml up -d postgres
        sleep 10
        docker-compose exec -T postgres psql -U ${{ secrets.POSTGRES_USER }} -c "CREATE DATABASE ${{ secrets.POSTGRES_DB }};"
        docker-compose -f compose-dev.yaml up -d app
      env:
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        COMPOSE_DOCKER_CLI_BUILD: 1
        DOCKER_BUILDKIT: 1

    - name: Verify deployment
      run: |
        timeout 30s bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8080/health)" != "200" ]]; do sleep 5; done' || exit 1