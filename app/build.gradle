plugins {
    id 'java'
    id 'application' // For creating executable JARs
    id 'org.openjfx.javafxplugin' version '0.1.0' // JavaFX plugin
    id 'org.springframework.boot' version '3.1.0' // Updated Spring Boot plugin
    id 'io.spring.dependency-management' version '1.1.0' // Updated Spring dependency management
}

group 'com.projecthub'
repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/release' } // Spring repository
}

dependencies {
    // JavaFX dependencies
    implementation 'org.openjfx:javafx-controls:+'
    implementation 'org.openjfx:javafx-fxml:+'

    // OpenCSV for CSV handling
    implementation 'com.opencsv:opencsv:+'

    // Spring Boot starters
    implementation 'org.springframework.boot:spring-boot-starter' // Core Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA and Hibernate support
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web' // Spring Web MVC

    // PostgreSQL driver
    implementation 'org.postgresql:postgresql:+'

       // Springdoc OpenAPI Dependencies
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.14' // Use the latest version available
    implementation 'org.springdoc:springdoc-openapi-data-rest:1.6.14' // If using Spring Data REST

    // Spring Security dependencies
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-config'
    implementation 'org.springframework.security:spring-security-web'

    // Jakarta dependencies
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'jakarta.servlet:jakarta.servlet-api:5.0.0'

    // Testing dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter-api:+'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:+'
}

application {
    mainClass = 'com.projecthub.ui.ProjectHubFX' // Update with your JavaFX main class
}

javafx {
    version = '23' // Use the appropriate JavaFX version
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': 'com.projecthub.ui.ProjectHubFX' // Required for executable JAR
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } // Include dependencies in the JAR
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    filePermissions {
        fileMode = 0755
    }
}